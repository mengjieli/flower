var Layer = (function (_super) {

    __extends(Layer, _super);

    function Layer(top) {
        _super.call(this);
        this.top = top;
        this.images = [];
        this.animations = [];
    }

    Layer.prototype.setData = function (val) {
        this.data = val;
        this.y = this.data.size.height.value;
        this.data.images.addListener(flower.Event.ADDED, this.addImage, this);
        this.data.images.addListener(flower.Event.REMOVED, this.removeImage, this);
        this.data.animations.addListener(flower.Event.ADDED, this.addAnimation, this);
        this.data.animations.addListener(flower.Event.REMOVED, this.removeAnimation, this);
    }

    Layer.prototype.addImage = function (e) {
        var imageData = e.data;
        if (imageData.layer.value == 1 && !this.top || imageData.layer.value == 3 && this.top) {
            var group = new flower.Group();
            this.addChild(group);
            group.x = imageData.x.value;
            group.y = -imageData.y.value;
            group.width = group.height = 0;
            var image = new flower.Image(imageData.url.value);
            image.bottom = 0;
            group.addChild(image);
            this.images.push({
                image: image,
                data: imageData
            });
        }
    }

    Layer.prototype.removeImage = function (e) {
        var images = this.images;
        for (var i = 0; i < this.images.length; i++) {
            if (images[i].data == e.data) {
                images[i].image.parent.dispose();
                images.splice(i, 1);
                break;
            }
        }
    }

    Layer.prototype.addAnimation = function (e) {
        var data = e.data;
        if (data.layer.value == 1 && !this.top || data.layer.value == 3 && this.top) {
            var group = new flower.Group();
            this.addChild(group);
            group.x = data.x.value;
            group.y = -data.y.value;
            group.width = group.height = 0;
            var animation = new Animation(data.config);
            animation.bottom = 0;
            animation.play(data.config.loop,true);
            group.addChild(animation);
            this.animations.push({
                animation: animation,
                data: data
            });
        }
    }

    Layer.prototype.removeAnimation = function (e) {
        var animtions = this.animations;
        for (var i = 0; i < animtions.length; i++) {
            if (animtions[i].data == e.data) {
                if(animtions[i].animation.parent) {
                    animtions[i].animation.parent.dispose();
                }
                animtions.splice(i, 1);
                break;
            }
        }
    }

    return Layer;

})(flower.Sprite);

module.Layer = Layer;