var UILayer = (function (_super) {

    __extends(UILayer, _super);

    function UILayer(serverNet) {
        _super.call(this);
        this.uiContainer = new flower.Sprite();
        this.addChild(this.uiContainer);
        this.serverNet = serverNet;
        this.taskList = new TaskList();
        this.addChild(this.taskList);
        this.dialog = new DialogUI(serverNet);
        this.addChild(this.dialog);
        this.percentWith = 100;
        this.percenHeight = 100;
        this.images = [];
        this.animations = [];
    }

    UILayer.prototype.setData = function (val) {
        _super.prototype.setData.call(this, val);
        this.taskList.data = this.data;
        this.dialog.data = this.data;
        this.uiContainer.y = this.data.camera.height.value;
        this.data.images.addListener(flower.Event.ADDED, this.addImage, this);
        this.data.images.addListener(flower.Event.REMOVED, this.removeImage, this);
        this.data.animations.addListener(flower.Event.ADDED, this.addAnimation, this);
        this.data.animations.addListener(flower.Event.REMOVED, this.removeAnimation, this);
    }

    UILayer.prototype.addImage = function (e) {
        var imageData = e.data;
        if (imageData.layer.value == 4) {
            var group = new flower.Group();
            this.uiContainer.addChild(group);
            group.x = imageData.x.value;
            group.y = -imageData.y.value;
            group.width = group.height = 0;
            var image = new MapImage(imageData);
            group.addChild(image);
            this.images.push({
                image: image,
                data: imageData
            });
        }
    }

    UILayer.prototype.removeImage = function (e) {
        var images = this.images;
        for (var i = 0; i < this.images.length; i++) {
            if (images[i].data == e.data) {
                images[i].image.parent.dispose();
                images.splice(i, 1);
                break;
            }
        }
    }

    UILayer.prototype.addAnimation = function (e) {
        var data = e.data;
        if (data.layer.value == 4) {
            var group = new flower.Group();
            this.uiContainer.addChild(group);
            group.x = data.x.value;
            group.y = -data.y.value;
            group.width = group.height = 0;
            var animation = new MapAnimation(data);
            group.addChild(animation);
            this.animations.push({
                animation: animation,
                data: data
            });
        }
    }

    UILayer.prototype.removeAnimation = function (e) {
        var animtions = this.animations;
        for (var i = 0; i < animtions.length; i++) {
            if (animtions[i].data == e.data) {
                if (animtions[i].animation.parent) {
                    animtions[i].animation.parent.dispose();
                }
                animtions.splice(i, 1);
                break;
            }
        }
    }

    return UILayer;

})(flower.Group);

module.UILayer = UILayer;