var Animation = (function (_super) {

    __extends(Animation, _super);

    var imageSave = {};

    /**
     * 动画配置文件
     * @param data
     * {
     *  url: "res/tools/dungeon/res/roler/",
        name: "1201002_000",
        format: "png",
        start: 0,
        end: 5,
        frameRate: 18,
        x: 0,
        y: 0,
        scaleX: 1,
        scaleY: 1
     * }
     * @returns {Animation}
     * @constructor
     */
    function Animation(data) {
        _super.call(this);
        this.__container = new flower.Group();
        this.__container.width = this.__container.height = 0;
        this.__container.x = data.x;
        this.__container.y = data.y;
        this.addChild(this.__container);
        this.__container.scaleX = data.scaleX || 1;
        this.__container.scaleY = data.scaleY || 1;
        this.__length = data.end - data.start + 1;
        this.__frameTime = 1000 / data.frameRate;
        this.__frames = [];
        this.__framesURL = [];
        this.__save = data.save || false;
        this.__saveId = data.saveId || 0;
        if (this.__save) {
            if (!imageSave[this.__saveId]) {
                imageSave[this.__saveId] = {};
            }
        }
        for (var i = data.start; i <= data.end; i++) {
            var name = data.name.slice(0, data.name.length - (i + "").length) + (i + "");
            name = data.url + name + "." + (data.format || "png");
            var image;
            if (this.__save && imageSave[this.__saveId][name] && imageSave[this.__saveId][name].length) {
                image = imageSave[this.__saveId][name].pop();
            } else {
                image = new flower.Image(name);
            }
            this.__framesURL.push(name);
            this.__frames.push(image);
            if(data.bottom) {
                image.bottom = 0;
            }
        }
        this.__frame = 0;
        this.__time = 0;
        this.__playFlag = false;
        this.__loop = 0;
        this.__loopDispose = false;
        this.__show = null;
        this.play();
    }

    Animation.prototype.play = function (loop = 0, loopDispose = false) {
        this.__loop = loop;
        this.__loopDispose = loopDispose;
        if (!this.__playFlag) {
            this.__playFlag = true;
            flower.EnterFrame.add(this.update, this);
        }
    }

    Animation.prototype.stop = function () {
        if (this.__playFlag) {
            this.__playFlag = false;
            flower.EnterFrame.remove(this.update, this);
        }
    }

    Animation.prototype.update = function (time, dt) {
        this.__time += dt;
        this.__frame = Math.floor(this.__time / this.__frameTime);
        if (this.__frame >= this.__length) {
            if (this.__loop) {
                this.__loop--;
                if (!this.__loop) {
                    this.dispatchWith(flower.Event.COMPLETE);
                    if (this.isDispose) {
                        return;
                    }
                }
                if (!this.__loop && this.__loopDispose) {
                    this.dispose();
                    return;
                }
            }
            this.__frame = 0;
            this.__time = 0;
        }
        var image = this.__frames[this.__frame];
        if (image != this.__show) {
            if (this.__show) {
                this.__container.removeChild(this.__show);
            }
            this.__container.addChild(image);
            this.__show = image;
        }
    }

    Animation.prototype.dispose = function () {
        this.stop();
        if (this.__save) {
            for (var i = 0; i < this.__frames.length; i++) {
                if (!imageSave[this.__saveId][this.__framesURL[i]]) {
                    imageSave[this.__saveId][this.__framesURL[i]] = [];
                }
                var list = imageSave[this.__saveId][this.__framesURL[i]];
                if (list.length < Animation.maxSave) {
                    list.push(this.__frames[i]);
                    if (this.__frames[i].parent) this.__frames[i].parent.removeChild(this.__frames[i]);
                } else {
                    this.__frames[i].dispose();
                }
            }
            this.__frames.length = 0;
        } else {
            while (this.__frames.length) {
                this.__frames.pop().dispose();
            }
        }
        _super.prototype.dispose.call(this);
    }

    Animation.maxSave = 80;

    return Animation;
})(flower.Sprite);

module.Animation = Animation;